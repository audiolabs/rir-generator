[build-system]
requires = ["setuptools>=64.0", "setuptools-scm>=8.0", "wheel", "cffi>=1.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rir-generator"
dynamic = ["version"]
description = "Room Impulse Response Generator for Python"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "EmanuÃ«l Habets", email = "emanuel.habets@audiolabs-erlangen.de"},
    {name = "Nils Werner", email = "nils.werner@fau.de"}
]
keywords = ["audio", "acoustics", "room impulse response", "reverb", "convolution"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "numpy>=1.17.0",
    "scipy>=1.0.0",
    "cffi>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-black",
    "build>=0.7.0",
    "twine>=3.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-bibtex",
    "sphinx_rtd_theme",
    "numpydoc>=1.0.0",
]
tests = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-black",
]

[project.urls]
Homepage = "https://github.com/audiolabs/rir-generator"
Documentation = "https://rir-generator.readthedocs.io"
Repository = "https://github.com/audiolabs/rir-generator"
Issues = "https://github.com/audiolabs/rir-generator/issues"
DOI = "https://doi.org/10.5281/zenodo.4133077"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["rir_generator*"]

[tool.setuptools.package-data]
rir_generator = ["_cffi/*.cpp", "_cffi/*.h", "_cffi/*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--doctest-modules --cov-report term-missing --cov rir_generator"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["rir_generator"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100

[tool.setuptools_scm]
# Use git tags for versioning
version_scheme = "post-release"
local_scheme = "no-local-version"
write_to = "src/rir_generator/_version.py"
write_to_template = """
# This file is auto-generated by setuptools-scm
__version__ = "{version}"
__version_tuple__ = {version_tuple}
"""
fallback_version = "0.0.0.dev0"
