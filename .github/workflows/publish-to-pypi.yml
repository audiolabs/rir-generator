name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead'
        required: false
        default: false
        type: boolean

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-11, macos-14]
    
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history for setuptools-scm
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          # Build for Python 3.8-3.12
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          # Skip 32-bit builds and musl builds
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
          # Install dependencies (use python -m pip for Windows compatibility)
          CIBW_BEFORE_BUILD: python -m pip install -U setuptools wheel cffi
          # Run tests after build
          CIBW_TEST_REQUIRES: pytest pytest-cov numpy scipy
          CIBW_TEST_COMMAND: pytest {project}/tests -v
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          retention-days: 7

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history for setuptools-scm
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build sdist
        run: python -m build --sdist
      
      - name: Check metadata
        run: twine check dist/*
      
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 7

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist/
          merge-multiple: true
      
      - name: Display structure of downloaded files
        run: ls -R dist/
      
      - name: Publish to Test PyPI
        if: github.event.inputs.test_pypi == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      
      - name: Publish to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1
